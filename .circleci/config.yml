# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

defaults: &defaults
  working_directory: ~/repo
  # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
  # List of related images: https://circleci.com/developer/images/image/cimg/node
  docker:
    - image: cimg/node:16.14.0-browsers

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test-build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          # See the configuration reference documentation for more details on using restore_cache and save_cache steps
          # https://circleci.com/docs/2.0/configuration-reference/?section=reference#save_cache
          keys:
            - node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
            - node-deps-v1--
      - run:
          name: Install packages
          command: npm ci
      - run:
          name: Run tests
          command: |
            npm test --ci
      - run:
          name: Run build
          command: npm run build
      - store_artifacts:
          path: ./test-results
      - save_cache:
          key: node-deps-v1-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/repo
          paths: .
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish package
          command: npm publish

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test-build:
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - test-build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/